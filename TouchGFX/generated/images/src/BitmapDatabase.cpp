// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB888 0x56edd921
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _blue_buttons_round_edge_small[];
extern const unsigned char _blue_buttons_round_edge_small_pressed[];
extern const unsigned char _blue_icons_down_arrow_48[];
extern const unsigned char _blue_icons_up_arrow_48[];
extern const unsigned char _blue_textures_binding_light[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _blue_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _blue_icons_down_arrow_48, 0, 46, 26, 17, 15, 12, 7, touchgfx::Bitmap::ARGB8888 },
    { _blue_icons_up_arrow_48, 0, 46, 26, 17, 4, 12, 7, touchgfx::Bitmap::ARGB8888 },
    { _blue_textures_binding_light, 0, 180, 180, 0, 0, 180, 180, touchgfx::Bitmap::RGB888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

